<project name="RestFixture" default="full" basedir=".">
	<record name="${basedir}/${ant.project.name}.build.log" loglevel="verbose" />

	<property file="properties/${user.name}.properties" />
	<property file="build.properties" />

	<property name="fitnesse.root.name" value="FitNesseRoot/FitNesse" />
        <property name="fitnesse.path" value="${ant.project.name}Tests" />
        <property name="fitnesse.root" value="${fitnesse.home}/${fitnesse.root.name}" />
	<property name="src.unit" value="${basedir}/src/test/java" />
        <property name="src.cat" value="${basedir}/src/test/fitnesse" />
	<property name="src" value="${basedir}/src/main/java" />
	<property name="resources" value="${basedir}/src/main/resources" />
	<property name="build" value="${basedir}/build" />
	<property name="build.fitnesse.home" value="${basedir}/build/fitnesse" />
	<property name="build.fitnesse.root" value="${build.fitnesse.home}/${fitnesse.root.name}" />
	<property name="build.fitnesse.test.root" value="${build.fitnesse.root}/${fitnesse.path}" />
	<property name="dist" value="${basedir}/dist" />
	<property name="lib" value="${basedir}/lib" />
	<property name="reports" value="${build}/reports" />
	<property name="fitnesse.reports" value="${reports}/fitnesse" />
	<property name="artifacts" value="${dist}/artifacts" />

	<path id="project.classpath">
		<pathelement location="${resources}" />
		<fileset dir="${lib}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<path id="test.classpath">
		<path refid="project.classpath" />
		<pathelement location="${build}/classes/main" />
		<pathelement location="${build}/classes/unit" />
	</path>

	<target name="full" depends="clean, package, fitnesse-test, dist" />

	<target name="init">
		<mkdir dir="${build}" />
		<mkdir dir="${reports}" />
	</target>

	<target name="clean">
		<delete dir="${build}" />
		<delete dir="${dist}" />
	</target>

	<target name="compile" depends="init">
		<mkdir dir="${build}/classes/main" />
		<javac includes="**/*.java" debug="${build.debug}"
			destdir="${build}/classes/main"
			target="${build.target}">
			<src path="${src}" />
			<classpath refid="project.classpath" />
		</javac>
	</target>

	<target name="test" depends="compile">
		<mkdir dir="${build}/classes/unit" />
		<mkdir dir="${reports}/unit" />
		<javac debug="${build.debug}" destdir="${build}/classes/unit" target="${build.target}">
			<classpath refid="test.classpath" />
			<src path="${src.unit}" />
			<include name="**/*.java" />
		</javac>
		<junit errorproperty="test.failed">
			<classpath refid="test.classpath" />
			<formatter type="plain" />
			<batchtest fork="yes" todir="${reports}/unit">
				<fileset dir="${src.unit}">
					<include name="**/*Test.java" />
				</fileset>
			</batchtest>
		</junit>
		<fail if="test.failed" />
	</target>

	<target name="compile-cat" depends="compile">
		<mkdir dir="${build}/classes/cat" />
		<javac includes="**/*.java"
			debug="${build.debug}"
			target="${build.target}"
			destdir="${build}/classes/cat">
			<src path="${src.cat}" />
			<classpath refid="test.classpath" />
		</javac>
	</target>

	<target name="package" depends="compile,compile-cat">
		<jar destfile="${build}/${ant.project.name}.jar" basedir="${build}/classes/main" includes="**/*" />
		<jar destfile="${build}/${ant.project.name}_fitnesse.jar" basedir="${build}/classes/cat" includes="**/*" excludes="**/*.jar" />
	</target>

    <target name="-fitnesse-copy" depends="package">
        <delete dir="${fitnesse.test.root}" />
        <mkdir dir="${fitnesse.test.root}/lib" />
        <copy todir="${fitnesse.test.root}/lib" flatten="true">
            <fileset dir="build">
                <include name="*.jar" />
            </fileset>
            <fileset dir="lib">
                <include name="**/*.jar" />
            </fileset>
            <fileset dir="${resources}">
                <include name="**/*.*" />
            </fileset>
        </copy>
        <copy todir="${fitnesse.test.root}" overwrite="true" >
            <filterset>
                <filter token="FITNESSE_HOME" value="${fitnesse.home}" />
                <filter token="FITNESSE_TEST_ROOT" value="${fitnesse.test.root}" />
                <filter token="TEMP_DIRECTORY" value="${temp.directory}" />
            </filterset>
            <fileset dir="fitdocs/${fitnesse.path}" />
        </copy>
    </target>

    <target name="fitnesse-deploy-remote" depends="package">
    	<property name="remote.fitnesse.root" value="${fitnesse.root}" />
        <antcall target="-fitnesse-copy">
            <param name="fitnesse.root" value="${fitnesse.home}/${fitnesse.root.name}" />
            <param name="fitnesse.test.root" value="${remote.fitnesse.root}/${fitnesse.path}" />
        </antcall>
    </target>

    <target name="fitnesse-deploy" depends="package">
        <antcall target="-fitnesse-copy">
            <param name="fitnesse.root" value="${build.fitnesse.home}/${fitnesse.root.name}" />
            <param name="fitnesse.test.root" value="${build.fitnesse.test.root}" />
        </antcall>
    </target>

	<target name="fitnesse-test-remote" depends="fitnesse-deploy-remote,fitnesse-exec-test,check.fitnesse.failure" if="execute.cat" />
	<target name="fitnesse-test" depends="fitnesse-start,fitnesse-deploy,fitnesse-exec-test,fitnesse-stop,check.fitnesse.failure" if="execute.cat" />

	<target name="check.fitnesse.failure" if="fitnesse.fail">
		<fail message="FitNesse tests failed, see reports in '${fitnesse.reports}/results.html' for details." />
	</target>

	<target name="fitnesse-start" if="execute.cat">
		<taskdef name="start-fitnesse" classname="fitnesse.ant.StartFitnesseTask" classpathref="project.classpath" />
		<start-fitnesse wikidirectoryrootpath="${build.fitnesse.home}" fitnesseport="${fitnesse.port}" />
		<sleep seconds="2" />
	</target>

	<target name="fitnesse-stop" if="execute.cat">
		<taskdef name="stop-fitnesse" classname="fitnesse.ant.StopFitnesseTask" classpathref="project.classpath" />
		<stop-fitnesse fitnesseport="${fitnesse.port}" />
	</target>

	<target name="fitnesse-exec-test" if="execute.cat">
		<taskdef name="execute-fitnesse-tests" classname="fitnesse.ant.ExecuteFitnesseTestsTask" classpathref="project.classpath" />
        <property name="fitnesse.suite.root" value="${fitnesse.path}.BasicTests" />
        <mkdir dir="${fitnesse.reports}" />
		<execute-fitnesse-tests suitepage="${fitnesse.suite.root}"
			fitnesseport="${fitnesse.port}" resultsdir="${fitnesse.reports}"
			resultshtmlpage="results.html" failonerror="false" resultproperty="fitnesse.fail" >
            <classpath>
                <pathelement location="${build}/${ant.project.name}.jar" />
                <pathelement location="${build}/${ant.project.name}_fitnesse.jar" />
                <path refid="project.classpath" />
            </classpath>
		</execute-fitnesse-tests>
	</target>

	<target name="dist-doc" if="execute.cat">
		<copy tofile="${artifacts}/docs/docs.html" file="${reports}/fitnesse/results.html" failonerror="false" />
		<copy todir="${artifacts}/docs" flatten="true">
			<fileset dir="${fitnesse.reports}" includes="**/*.*" excludes="results.*" />
		</copy>
		<replace file="${artifacts}/docs/docs.html" token="base href" value="xbase href" />
		<replace file="${artifacts}/docs/docs.html" token="/files" value="http://fitnesse.org/files" />
		<replace file="${artifacts}/docs/docs.html" token="files/restfixture/" value="" />
	</target>

	<target name="dist">
		<delete dir="${dist}" />
		<mkdir dir="${artifacts}" />
		<copy todir="${artifacts}" file="${build}/${ant.project.name}.jar" />
		<copy todir="${artifacts}" file="${build}/${ant.project.name}_fitnesse.jar" />
		<copy todir="${artifacts}/lib" flatten="true">
			<fileset dir="lib" includes="**/*.jar" excludes="test/**/*.jar, fitnesse/**/*.jar, log4j/**/*.jar" />
		</copy>
		<copy todir="${artifacts}/etc">
			<fileset dir="etc" includes="**/*.*" />
		</copy>
		<copy todir="${artifacts}" file="COPYING" />
		<copy todir="${artifacts}" file="COPYING.LESSER" />
		<copy todir="${artifacts}" file="COPYRIGHT" />
		<copy todir="${artifacts}" file="README" />
		<property file="version.properties" />
		<antcall target="dist-doc" />
		<move file="${artifacts}/docs/docs.html" tofile="${artifacts}/docs/RestFixture-${version}.html" />
		<zip destfile="dist/RestFixture-nodep-${version}.zip" basedir="${artifacts}" casesensitive="true" compress="true" includes="**/*" excludes="lib/**/*.jar" />
		<zip destfile="dist/RestFixture-${version}.zip" basedir="${artifacts}" casesensitive="true" compress="true" includes="**/*" />
		<zip destfile="dist/RestFixture-docs-${version}.zip" basedir="${artifacts}/docs" casesensitive="true" compress="true" includes="**/*" />
	</target>

</project>
